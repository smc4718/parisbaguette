<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pyj.paris.dao.ReservationMapper">

    <resultMap id="ReservationMap" type="ReservationDto">
        <id     column="RESERVATION_NO"    property="reservationNo" />
        <result column="USER_NO"           property="userNo"/>
        <result column="RESERVATION_DATE"  property="reservationDate" />
        <result column="CONTENTS"          property="contents" />
        <result column="STATUS"            property="status" />
        <result column="CREATED_AT"        property="createdAt" />
        <association javaType="UserDto"     property="userDto">
            <id         column="USER_NO"         property="userNo" />
            <result     column="ID"              property="id" />
            <result     column="PW"              property="pw" />
            <result     column="NAME"            property="name" />
            <result     column="GENDER"          property="gender" />
            <result     column="EMAIL"           property="email" />
            <result     column="HP"              property="hp" />
            <result     column="HP_SMS_YN"       property="hpSmsYn" />
            <result     column="JOINED_AT"       property="joinedAt" />
        </association>
    </resultMap>

    <!-- 예약 요청 -->
    <insert id="insertReservation" parameterType="ReservationDto">
        <selectKey order="BEFORE" keyProperty="reservationNo" resultType="int">
            SELECT RESERVATION_SEQ.NEXTVAL
            FROM DUAL
        </selectKey>
        INSERT INTO RESERVATION_T(
            RESERVATION_NO
          , USER_NO
          , CONTENTS
          , RESERVATION_DATE
          , STATUS
        ) VALUES (
            #{reservationNo}
          , #{userNo}
          , #{contents}
          , #{reservationDate}
          , 'PENDING'
        )
    </insert>

    <!-- 관리자가 예약 승인 -->
    <update id="approveReservation" parameterType="int">
        UPDATE RESERVATION_T
           SET STATUS = 'APPROVED'
         WHERE RESERVATION_NO = #{reservationNo}
    </update>

    <!-- 관리자가 예약 거절 -->
    <update id="rejectReservation" parameterType="int">
        UPDATE RESERVATION_T
           SET STATUS = 'REJECTED'
         WHERE RESERVATION_NO = #{reservationNo}
    </update>

    <!-- 예약 목록 조회 (관리자가 확인) -->
    <select id="getPendingReservations" resultMap="ReservationMap">
        SELECT R.RESERVATION_NO, R.USER_NO, R.RESERVATION_DATE, R.CONTENTS, R.STATUS, R.CREATED_AT,
               U.ID, U.PW, U.NAME, U.GENDER, U.EMAIL, U.HP, U.HP_SMS_YN, U.JOINED_AT
          FROM RESERVATION_T R JOIN USER_T U
               ON R.USER_NO = U.USER_NO
         WHERE R.STATUS = 'PENDING'
         ORDER BY R.CREATED_AT DESC
    </select>

    <!-- 특정 사용자의 예약 내역 조회 -->
    <select id="getUserReservations" parameterType="int" resultMap="ReservationMap">
        SELECT R.RESERVATION_NO, R.USER_NO, R.RESERVATION_DATE, R.CONTENTS, R.STATUS, R.CREATED_AT,
               U.ID, U.PW, U.NAME, U.GENDER, U.EMAIL, U.HP, U.HP_SMS_YN, U.JOINED_AT
          FROM RESERVATION_T R JOIN USER_T U
               ON R.USER_NO = U.USER_NO
         WHERE R.USER_NO = #{userNo}
         ORDER BY R.RESERVATION_NO DESC
    </select>

    <!-- 모든 예약 내역 (관리자용) -->
    <select id="getAllReservations" resultMap="ReservationMap">
        SELECT R.RESERVATION_NO, R.USER_NO, R.RESERVATION_DATE, R.CONTENTS, R.STATUS, R.CREATED_AT,
               U.ID, U.PW, U.NAME, U.GENDER, U.EMAIL, U.HP, U.HP_SMS_YN, U.JOINED_AT
          FROM RESERVATION_T R JOIN USER_T U
               ON R.USER_NO = U.USER_NO
         ORDER BY RESERVATION_NO DESC
    </select>

    <!-- 특정 월 예약 목록 -->
    <select id="getReservationsByMonth" resultType="ReservationDto">
        SELECT R.RESERVATION_NO, R.USER_NO, R.RESERVATION_DATE, R.CONTENTS, R.STATUS, R.CREATED_AT,
               U.ID, U.PW, U.NAME, U.GENDER, U.EMAIL, U.HP, U.HP_SMS_YN, U.JOINED_AT
          FROM RESERVATION_T R JOIN USER_T U
            ON R.USER_NO = U.USER_NO
         WHERE EXTRACT(YEAR FROM reservation_date) = #{year}
           AND EXTRACT(MONTH FROM reservation_date) = #{month}
    </select>

</mapper>
