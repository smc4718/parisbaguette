<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pyj.paris.dao.NoticeMapper">

    <resultMap id="NoticeMap" type="NoticeDto">
        <id     column="NOTICE_NO"  property="noticeNo" />
        <result column="TITLE"      property="title" />
        <result column="CONTENTS"   property="contents" />
        <result column="HIT"        property="hit" />
        <result column="CREATED_AT" property="createdAt" />
        <association javaType="UserDto"     property="userDto">
            <id         column="USER_NO"         property="userNo" />
            <result     column="ID"              property="id" />
            <result     column="PW"              property="pw" />
            <result     column="NAME"            property="name" />
            <result     column="GENDER"          property="gender" />
            <result     column="EMAIL"           property="email" />
            <result     column="HP"              property="hp" />
            <result     column="HP_SMS_YN"       property="hpSmsYn" />
            <result     column="JOINED_AT"       property="joinedAt" />
        </association>
    </resultMap>

    <!-- 공지 갯수 -->
    <select id="getNoticeCount" resultType="int">
        SELECT COUNT(*)
          FROM NOTICE_T
    </select>

    <!-- 공지 리스트 -->
    <select id="getNoticeList" parameterType="Map" resultMap="NoticeMap">
        SELECT NOTICE_NO, USER_NO, TITLE, CONTENTS, HIT, CREATED_AT, ID, PW, NAME, GENDER, EMAIL, HP, HP_SMS_YN, JOINED_AT
          FROM (SELECT N.NOTICE_NO, N.USER_NO, N.TITLE, N.CONTENTS, N.HIT, N.CREATED_AT,
                       U.ID, U.PW, U.NAME, U.GENDER, U.EMAIL, U.HP, U.HP_SMS_YN, U.JOINED_AT,
                       ROW_NUMBER() OVER (ORDER BY N.NOTICE_NO DESC) AS RN
                  FROM NOTICE_T N LEFT JOIN USER_T U
                       ON N.USER_NO = U.USER_NO)
         WHERE RN BETWEEN #{begin} AND #{end}
    </select>

    <!-- 공지 상세 -->
    <select id="getNotice" parameterType="int" resultMap="NoticeMap">
        SELECT N.NOTICE_NO, N.USER_NO, N.TITLE, N.CONTENTS, N.HIT, N.CREATED_AT,
               U.USER_NO, U.ID, U.PW, U.NAME, U.GENDER, U.EMAIL, U.HP, U.HP_SMS_YN, U.JOINED_AT
          FROM NOTICE_T N JOIN USER_T U
               ON N.USER_NO = U.USER_NO
         WHERE N.NOTICE_NO = #{noticeNo}
    </select>

    <!-- 공지 등록 -->
    <insert id="insertNotice" parameterType="NoticeDto">
        <selectKey order="BEFORE" keyProperty="noticeNo" resultType="int">
            SELECT NOTICE_SEQ.NEXTVAL
              FROM DUAL
        </selectKey>
        INSERT INTO NOTICE_T(
            NOTICE_NO
          , USER_NO
          , TITLE
          , CONTENTS
          , HIT
          , CREATED_AT
        ) VALUES (
            #{noticeNo}
          , #{userDto.userNo}
          , #{title}
          , #{contents}
          , NVL(#{hit}, 0) <!-- 기본값 0 -->
          , TO_CHAR(SYSDATE, 'YYYY-MM-DD') <!-- 현재 시간 설정 -->
        )
    </insert>

    <!-- 공지 수정하기 -->
    <update id="updateNotice" parameterType="NoticeDto">
        UPDATE NOTICE_T
           SET TITLE = #{title},
               CONTENTS = #{contents}
         WHERE NOTICE_NO = #{noticeNo}
    </update>

    <!-- 공지 삭제하기 -->
    <delete id="deleteNotice" parameterType="int">
        DELETE
          FROM NOTICE_T
         WHERE NOTICE_NO = #{noticeNo}
    </delete>

    <!-- 조회수 증가 -->
    <update id="updateHit" parameterType="int">
        UPDATE NOTICE_T
           SET HIT = HIT + 1
         WHERE NOTICE_NO = #{noticeNo}
    </update>

    <!-- 이미지 삽입 -->
    <insert id="insertNoticeImage" parameterType="NoticeImageDto">
        INSERT INTO NOTICE_IMAGE_T(
          NOTICE_NO
        , IMAGE_PATH
        , FILESYSTEM_NAME
        ) VALUES(
          #{noticeNo}
        , #{imagePath}
        , #{filesystemName}
        )
    </insert>

    <!-- 이미지 리스트 -->
    <select id="getNoticeImageList" parameterType="int" resultType="NoticeImageDto">
        SELECT NOTICE_NO, IMAGE_PATH, FILESYSTEM_NAME
          FROM NOTICE_IMAGE_T
         WHERE NOTICE_NO = #{noticeNo}
    </select>

    <!-- 이미지 삭제 -->
    <delete id="deleteNoticeImage" parameterType="String">
        DELETE
          FROM NOTICE_IMAGE_T
         WHERE FILESYSTEM_NAME = #{filesystemName}
    </delete>

    <!-- 이미지리스트 삭제 -->
    <delete id="deleteNoticeImageList" parameterType="int">
        DELETE
          FROM NOTICE_IMAGE_T
         WHERE NOTICE_NO = #{noticeNo}
    </delete>


</mapper>